// <auto-generated />
using ClimateLocator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClimateLocator.Data.Migrations
{
    [DbContext(typeof(ClimateLocatorDbContext))]
    partial class ClimateLocatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClimateLocator.Core.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("ClimateLocator.Core.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Temperature")
                        .HasColumnType("double");

                    b.Property<int>("WeatherDescriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeatherDescriptionId");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("ClimateLocator.Core.Models.WeatherDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("WeatherDescription");
                });

            modelBuilder.Entity("ClimateLocator.Core.Models.Weather", b =>
                {
                    b.HasOne("ClimateLocator.Core.Models.WeatherDescription", "WeatherDescription")
                        .WithMany()
                        .HasForeignKey("WeatherDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeatherDescription");
                });
#pragma warning restore 612, 618
        }
    }
}
